var cov_12qizztrpd=function(){var path="/home/lolo/bootcamp/collab/skylab-bootcamp-201907/staff/manuel-galvez/bro-holdem/bro-holdem-api/logic/user/update-user/index.js";var hash="9172bc32fc3d07806cd4a5255115d93993ce7ec9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/lolo/bootcamp/collab/skylab-bootcamp-201907/staff/manuel-galvez/bro-holdem/bro-holdem-api/logic/user/update-user/index.js",statementMap:{"0":{start:{line:1,column:21},end:{line:1,column:48}},"1":{start:{line:2,column:29},end:{line:2,column:55}},"2":{start:{line:12,column:0},end:{line:21,column:1}},"3":{start:{line:13,column:4},end:{line:13,column:29}},"4":{start:{line:15,column:4},end:{line:20,column:8}},"5":{start:{line:17,column:21},end:{line:17,column:80}},"6":{start:{line:18,column:8},end:{line:18,column:68}},"7":{start:{line:18,column:19},end:{line:18,column:68}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:17},end:{line:12,column:18}},loc:{start:{line:12,column:47},end:{line:21,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:12},end:{line:15,column:13}},loc:{start:{line:15,column:24},end:{line:20,column:5}},line:15}},branchMap:{"0":{loc:{start:{line:18,column:8},end:{line:18,column:68}},type:"if",locations:[{start:{line:18,column:8},end:{line:18,column:68}},{start:{line:18,column:8},end:{line:18,column:68}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"9172bc32fc3d07806cd4a5255115d93993ce7ec9"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate}=(cov_12qizztrpd.s[0]++,require('bro-holdem-utils'));const{models:{User}}=(cov_12qizztrpd.s[1]++,require('bro-holdem-data'));/**
 * 
 * @param {*} id
 * @param {*} fieldsToUpdate 
 * 
* @returns {Promise}
*/cov_12qizztrpd.s[2]++;module.exports=function(id,fieldsToUpdate){cov_12qizztrpd.f[0]++;cov_12qizztrpd.s[3]++;validate.string(id,'id');cov_12qizztrpd.s[4]++;return(async()=>{cov_12qizztrpd.f[1]++;const user=(cov_12qizztrpd.s[5]++,await User.updateOne({_id:id},{$set:fieldsToUpdate}));cov_12qizztrpd.s[6]++;if(!user){cov_12qizztrpd.b[0][0]++;cov_12qizztrpd.s[7]++;throw Error(`User with id ${id} does not exist.`);}else{cov_12qizztrpd.b[0][1]++;}})();};